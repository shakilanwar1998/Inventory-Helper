import Api from './api/index.js';
import { Buy } from './api/restful/buy/index.js';
import { Commerce } from './api/restful/commerce/index.js';
import { Developer } from './api/restful/developer/index.js';
import { PostOrder } from './api/restful/postOrder/index.js';
import { Sell } from './api/restful/sell/index.js';
import AuthNAuth from './auth/authNAuth.js';
import OAuth2 from './auth/oAuth2.js';
import * as enums from './enums/index.js';
import { ContentLanguage, Locale, MarketplaceId, SiteId } from './enums/index.js';
import * as errors from './errors/index.js';
import { IEBayApiRequest } from './request.js';
import * as types from './types/index.js';
import { AppConfig, ClientAlerts, Finding, Merchandising, Shopping, Signature, Trading } from './types/index.js';
export default class eBayApi extends Api {
    static readonly SiteId: typeof enums.SiteId;
    static readonly MarketplaceId: typeof enums.MarketplaceId;
    static readonly ContentLanguage: typeof enums.Locale;
    static readonly Locale: typeof enums.Locale;
    static fromEnv(req?: IEBayApiRequest): eBayApi;
    readonly authNAuth: AuthNAuth;
    readonly oAuth2: OAuth2;
    readonly OAuth2: OAuth2;
    private readonly factory;
    private _buy?;
    private _commerce?;
    private _developer?;
    private _postOrder?;
    private _sell?;
    private _trading?;
    private _finding?;
    private _shopping?;
    private _merchandising?;
    private _clientAlerts?;
    constructor(config: AppConfig, req?: IEBayApiRequest);
    get buy(): Buy;
    get commerce(): Commerce;
    get developer(): Developer;
    get postOrder(): PostOrder;
    get sell(): Sell;
    get trading(): Trading;
    get finding(): Finding;
    get shopping(): Shopping;
    get merchandising(): Merchandising;
    get clientAlerts(): ClientAlerts;
    setSignature(signature: Signature): void;
}
export { eBayApi, SiteId, MarketplaceId, ContentLanguage, Locale, enums, errors, types };
