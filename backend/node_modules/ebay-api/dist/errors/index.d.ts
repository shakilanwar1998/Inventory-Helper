export declare const rawError: unique symbol;
export declare class EBayError extends Error {
    readonly meta: any;
    readonly description: string;
    constructor(message: string, description?: string, meta?: any);
    toJSON(): {
        message: string;
        description: string;
        stack: string | undefined;
        type: string;
        meta: any;
    };
}
export declare class EbayNoCallError extends EBayError {
    constructor(msg?: string);
}
export declare class ApiEnvError extends EBayError {
    constructor(key: any);
}
export declare const getErrorMessage: (err: any) => any;
export declare const getErrorDescription: (err: any) => any;
export declare class EbayApiError extends EBayError {
    constructor(err: any);
}
export declare class EBayAccessDenied extends EbayApiError {
}
export declare class EBayInvalidGrant extends EbayApiError {
}
export declare class EBayNotFound extends EbayApiError {
    static readonly code = 11001;
}
export declare class EBayInvalidAccessToken extends EbayApiError {
}
export declare class EBayIAFTokenExpired extends EbayApiError {
    static readonly code = 21917053;
}
export declare class EBayIAFTokenInvalid extends EbayApiError {
    static readonly code = 21916984;
}
export declare class EBayTokenRequired extends EbayApiError {
    static readonly code = 930;
}
export declare class EBayInvalidScope extends EbayApiError {
}
export declare const mapEBayError: (err: any) => any;
export declare const handleEBayError: (err: any) => never;
export declare const checkEBayResponse: (data: any) => void;
